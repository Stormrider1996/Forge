{
    "openapi": "3.0.0",
    "info": {
        "title": "Laravel-News portal app",
        "version": "1.0.0"
    },
    "paths": {
        "/admin/users": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Get list of non-admin users",
                "description": "Returns a paginated list of non-admin users",
                "operationId": "users.index",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/admin/users/{user_id}/edit": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Get user details for editing",
                "description": "Returns user data with favourites and comments",
                "operationId": "users.edit",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "User id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "api_key_security_example": []
                    }
                ]
            }
        },
        "/admin/users/{user_id}/update": {
            "put": {
                "tags": [
                    "Admin"
                ],
                "summary": "Update user details",
                "description": "Updates user name, email and password",
                "operationId": "updateUser",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "ID of the user to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "New name of the user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "New email of the user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "New password of the user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User updated successfully"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/admin/users/{user_id}/delete": {
            "delete": {
                "tags": [
                    "Admin"
                ],
                "summary": "Delete user",
                "description": "Deletes user by ID",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "ID of the user to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/admin/comments/{comment_id}": {
            "delete": {
                "tags": [
                    "Admin"
                ],
                "summary": "Delete comment",
                "description": "Deletes comment by ID",
                "operationId": "deleteComment",
                "parameters": [
                    {
                        "name": "comment_id",
                        "in": "path",
                        "description": "ID of the comment to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comment deleted successfully"
                    },
                    "404": {
                        "description": "Comment not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/admin/favourites/{favourite_id}": {
            "delete": {
                "tags": [
                    "Admin"
                ],
                "summary": "Delete favourite",
                "description": "Deletes favourite by ID",
                "operationId": "deleteFavourite",
                "parameters": [
                    {
                        "name": "favourite_id",
                        "in": "path",
                        "description": "ID of the favourite to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Favourite deleted successfully"
                    },
                    "404": {
                        "description": "Favourite not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/admin/logs": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Get user log activity",
                "description": "Returns a list of user log activity",
                "operationId": "userLog",
                "responses": {
                    "200": {
                        "description": "User log activity retrieved successfully"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/login": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Show the login view",
                "operationId": "d38b0625602ec8e41c3bb98aa2e969de",
                "responses": {
                    "200": {
                        "description": "The login view",
                        "content": {
                            "text/html": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Store the authenticated session",
                "operationId": "42f77e072dec84b0e1094cca1228298e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "description": "The user's email address",
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "description": "The user's password",
                                        "type": "string",
                                        "format": "password",
                                        "example": "secret"
                                    },
                                    "remember": {
                                        "description": "Whether to remember the user's session",
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "302": {
                        "description": "Redirect to the intended route",
                        "headers": {
                            "Location": {
                                "description": "The redirect URL",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Destroy the authenticated session",
                "operationId": "03afb12b342c2ea43bdc1de4f39e91a8",
                "responses": {
                    "302": {
                        "description": "Redirect to the home page",
                        "headers": {
                            "Location": {
                                "description": "The redirect URL",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/confirm-password": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Show the confirm password view",
                "operationId": "cb7fda87fdc05e9ad0ee3b000f4febaa",
                "responses": {
                    "200": {
                        "description": "The confirm password view",
                        "content": {
                            "text/html": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Store the confirmed password",
                "operationId": "dc62efc6d3a9c874a5c5c974e0b69df4",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "password": {
                                        "description": "The user's password",
                                        "type": "string",
                                        "example": "secret"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "302": {
                        "description": "Redirect to the intended route",
                        "headers": {
                            "Location": {
                                "description": "The redirect URL",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/email/verification-notification": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Send a new email verification notification",
                "operationId": "7c01a354a5960445207bc5d2f17d547e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "verification-link-sent"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "302": {
                        "description": "Redirect to home if already verified"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/verify-email": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Show the email verification prompt or redirect to the home page",
                "operationId": "2b8625c52fabf6e7e433cf5a558e1cf2",
                "responses": {
                    "200": {
                        "description": "The email verification prompt view",
                        "content": {
                            "text/html": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "302": {
                        "description": "Redirect to the home page if the user has verified email",
                        "headers": {
                            "Location": {
                                "description": "The redirect URL",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/reset-password/{token}": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Show the reset password view",
                "operationId": "139cbd7a33506f23db79a42dd3a1b825",
                "parameters": [
                    {
                        "name": "token",
                        "in": "path",
                        "description": "The password reset token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The reset password view",
                        "content": {
                            "text/html": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/reset-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Reset user password",
                "operationId": "24b1c68468bf984b8806908f211f3827",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "token",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "token": {
                                        "type": "string",
                                        "example": "f5c8aaf6f44f4b50a0b3e0c017e06e13"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "PassWord12345"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "PassWord12345"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "302": {
                        "description": "Successful password reset",
                        "headers": {
                            "Location": {
                                "description": "Redirect to login page with status message",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "We can't find a user with that email address."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/password": {
            "put": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Update the user's password",
                "description": "Updates the user's password after validating the current password and the new password confirmation",
                "operationId": "updatePassword",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "current_password",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "current_password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "secret"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newsecret"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newsecret"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "302": {
                        "description": "Successful operation",
                        "headers": {
                            "Location": {
                                "description": "The URL of the previous page with a status message",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "current_password": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The current password is incorrect."
                                                    }
                                                },
                                                "password": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The password confirmation does not match."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/forgot-password": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Show the form to request a password reset link",
                "description": "Returns a view with the form to enter the user's email address and request a password reset link",
                "operationId": "showForgotPasswordForm",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "text/html": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "guest": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Send a password reset link to the user's email address",
                "description": "Attempts to send a password reset link to the user's email address and returns a status message",
                "operationId": "sendPasswordResetLink",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "302": {
                        "description": "Successful operation",
                        "headers": {
                            "Location": {
                                "description": "The URL of the previous page with a status message",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "We can't find a user with that email address."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "guest": []
                    }
                ]
            }
        },
        "/register": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Show the form to register a new user",
                "description": "Returns a view with the form to enter the user's name, email address, password and password confirmation",
                "operationId": "showRegistrationForm",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "text/html": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "guest": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "operationId": "573de1fed352c1205a32c4d1b9877375",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "johndoe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "Password123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "Password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "302": {
                        "description": "Successful registration and redirection to home page",
                        "headers": {
                            "Location": {
                                "description": "The URL of the home page",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "password": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/verify-email/{id}/{hash}": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Verify the user's email address",
                "operationId": "3cf766685ea47c494f1b16c8eb501cd6",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The user's id",
                        "required": true,
                        "schema": {
                            "type": "UUID"
                        }
                    },
                    {
                        "name": "hash",
                        "in": "path",
                        "description": "The verification hash",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "302": {
                        "description": "Redirect to the home page with verified status"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/news/everything": {
            "get": {
                "tags": [
                    "News"
                ],
                "summary": "Get all news articles",
                "description": "Returns a paginated list of news articles",
                "operationId": "ae5beeaa4addf45be7674a7dd9e35e1f",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "The search query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "source",
                        "in": "query",
                        "description": "The source of the news article",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "domain",
                        "in": "query",
                        "description": "The domain of the news article",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "exclude_domain",
                        "in": "query",
                        "description": "The domain to exclude from the news article",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "The start date of the news article",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "description": "The end date of the news article",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "language",
                        "in": "query",
                        "description": "The language of the news article",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "The sort order of the news article",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "The number of news articles per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The current page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/News"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/news/top-headlines": {
            "get": {
                "tags": [
                    "News"
                ],
                "summary": "Get top headlines",
                "description": "Returns a paginated list of top headlines",
                "operationId": "086540f02d40e41918d364d54248fbdb",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "The search query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "source",
                        "in": "query",
                        "description": "The source of the news article",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "country",
                        "in": "query",
                        "description": "The country of the news article",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "The category of the news article",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "The number of news articles per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The current page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/News"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/news/dashboard": {
            "get": {
                "tags": [
                    "News"
                ],
                "summary": "Get dashboard data",
                "description": "Returns a list of countries, languages and categories",
                "operationId": "0d409398fb7dd76a0b42f84b81dffc89",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "countries": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "languages": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "categories": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/news/sources": {
            "get": {
                "tags": [
                    "News"
                ],
                "summary": "Get news sources",
                "description": "Returns a list of news sources",
                "operationId": "578f0978b71563e6127160680b79a897",
                "parameters": [
                    {
                        "name": "category",
                        "in": "query",
                        "description": "The category of the news source",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "language",
                        "in": "query",
                        "description": "The language of the news source",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "country",
                        "in": "query",
                        "description": "The country of the news source",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/news/comments": {
            "get": {
                "tags": [
                    "News"
                ],
                "summary": "Get a list of comments with news and user details",
                "operationId": "4fd838bdff0f80030a297311b1c8ba12",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UserComments"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "News"
                ],
                "summary": "Create a new comment",
                "operationId": "d06026af1cdd90e34f047c2ede499f64",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "comment"
                                ],
                                "properties": {
                                    "comment": {
                                        "description": "The content of the comment",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "The success message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/news/comments/{comment_id}": {
            "put": {
                "tags": [
                    "News"
                ],
                "summary": "Update an existing comment",
                "operationId": "b6cd3164010e96d435195c98b5ccd3ad",
                "parameters": [
                    {
                        "name": "comment_id",
                        "in": "path",
                        "description": "The ID of the comment to update",
                        "required": true,
                        "schema": {
                            "type": "UUID"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "comment"
                                ],
                                "properties": {
                                    "comment": {
                                        "description": "The new content of the comment",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "The success message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "404": {
                        "description": "Comment not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "News"
                ],
                "summary": "Delete a comment by id",
                "operationId": "5cd1e2f142dc6567f24d495a3cfa002a",
                "parameters": [
                    {
                        "name": "comment_id",
                        "in": "path",
                        "description": "The id of the comment to delete",
                        "required": true,
                        "schema": {
                            "type": "UUID"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "The success message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/user/favourites": {
            "get": {
                "tags": [
                    "News"
                ],
                "summary": "Get user favourites",
                "operationId": "acc2dfcc2bd6cd6e347d8948a313cf34",
                "responses": {
                    "200": {
                        "description": "Returns a view of user favourites and news categories",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "userFavourites": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/UserFavourites"
                                            }
                                        },
                                        "categories": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "News"
                ],
                "summary": "Store a user favourite",
                "operationId": "0770802a2b02764babba98ea53ed9e6c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "description",
                                    "newsURL",
                                    "imageURL"
                                ],
                                "properties": {
                                    "title": {
                                        "description": "The title of the favourite.",
                                        "type": "string"
                                    },
                                    "description": {
                                        "description": "The description of the favourite.",
                                        "type": "string"
                                    },
                                    "newsURL": {
                                        "description": "The URL of the news article related to the favourite.",
                                        "type": "string",
                                        "format": "uri"
                                    },
                                    "imageURL": {
                                        "description": "The URL of the image related to the favourite.",
                                        "type": "string",
                                        "format": "uri"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "302": {
                        "description": "Redirects back with a success or error message"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/user/favourites/{user_id}": {
            "put": {
                "tags": [
                    "News"
                ],
                "summary": "Update a user favourite category",
                "operationId": "68ffdd6e435a596db105dd451caafeed",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "The identifier of the user to update",
                        "required": true,
                        "schema": {
                            "type": "UUID",
                            "format": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "category"
                                ],
                                "properties": {
                                    "category": {
                                        "description": "The name of the favourite category to update",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "302": {
                        "description": "Redirects back with a success message"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/user/favourites/{userFavourite_id}": {
            "delete": {
                "tags": [
                    "News"
                ],
                "summary": "Delete a user favourite",
                "operationId": "74a85c17d2def628e038d7db658fcbc3",
                "parameters": [
                    {
                        "name": "userFavourite_id",
                        "in": "path",
                        "description": "The identifier of the user favourite to delete",
                        "required": true,
                        "schema": {
                            "type": "UUID",
                            "format": "string"
                        }
                    }
                ],
                "responses": {
                    "302": {
                        "description": "Redirects to the favourites index with a success message"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "User favourite not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/profile/edit": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "Show the form for editing the user profile.",
                "operationId": "d06bd8fd9d326eb7a380edbdcea9928f",
                "responses": {
                    "200": {
                        "description": "The edit profile view.",
                        "content": {
                            "text/html": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "countries": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "languages": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized."
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/profile": {
            "delete": {
                "tags": [
                    "Profile"
                ],
                "summary": "Delete the user profile",
                "description": "Delete the user profile after validating the password",
                "operationId": "1d6a5c6489e35a763aa97ebef12863ce",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "password"
                                ],
                                "properties": {
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "secret"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "302": {
                        "description": "Redirect to the home page",
                        "headers": {
                            "Location": {
                                "description": "The URL of the home page",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "password": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Profile"
                ],
                "summary": "Update the user profile",
                "description": "Update the user profile with the given input",
                "operationId": "354f5b23296bed4036564563e7423f43",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "country",
                                    "language"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "country": {
                                        "type": "string",
                                        "example": "US"
                                    },
                                    "language": {
                                        "type": "string",
                                        "example": "en"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "302": {
                        "description": "Redirect to the profile edit page with a status message",
                        "headers": {
                            "Location": {
                                "description": "The URL of the profile edit page",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "country": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "language": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "News": {
                "title": "News",
                "description": "A news article model",
                "properties": {
                    "id": {
                        "type": "UUID",
                        "example": "029ee764-4177-4f54-8ee7-f1a348fdcdb7"
                    },
                    "title": {
                        "type": "string",
                        "example": "Breaking news: ..."
                    },
                    "description": {
                        "type": "string",
                        "example": "A brief summary of the news article"
                    },
                    "newsURL": {
                        "type": "string",
                        "format": "url",
                        "example": "https://example.com/news/1"
                    },
                    "imageURL": {
                        "type": "string",
                        "format": "url",
                        "example": "https://example.com/images/1.jpg"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-12-31T23:59:59Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-12-31T23:59:59Z"
                    }
                },
                "type": "object"
            },
            "User": {
                "required": [
                    "name",
                    "country",
                    "language",
                    "email",
                    "password",
                    "favourite_category"
                ],
                "properties": {
                    "id": {
                        "description": "The unique identifier of the user.",
                        "type": "UUID",
                        "format": "string",
                        "readOnly": true
                    },
                    "name": {
                        "description": "The name of the user.",
                        "type": "string"
                    },
                    "country": {
                        "description": "The country of the user.",
                        "type": "string"
                    },
                    "language": {
                        "description": "The language of the user.",
                        "type": "string"
                    },
                    "email": {
                        "description": "The email address of the user.",
                        "type": "string",
                        "format": "email"
                    },
                    "password": {
                        "description": "The password of the user.",
                        "type": "string",
                        "format": "password",
                        "writeOnly": true
                    },
                    "favourite_category": {
                        "description": "The favourite category of the user.",
                        "type": "string"
                    },
                    "email_verified_at": {
                        "description": "The date and time when the email address of the user was verified.",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    },
                    "userFavourites": {
                        "description": "The favourites of the user.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserFavourites"
                        },
                        "readOnly": true
                    },
                    "comments": {
                        "description": "The comments of the user.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserComments"
                        },
                        "readOnly": true
                    }
                },
                "type": "object"
            },
            "UserComments": {
                "required": [
                    "user_id",
                    "comment"
                ],
                "properties": {
                    "id": {
                        "description": "The unique identifier of the user comment.",
                        "type": "UUID",
                        "format": "string",
                        "readOnly": true
                    },
                    "news_id": {
                        "description": "The identifier of the user who made the comment.",
                        "type": "UUID",
                        "format": "string"
                    },
                    "user_id": {
                        "description": "The identifier of the news that has the comments.",
                        "type": "UUID",
                        "format": "string"
                    },
                    "comment": {
                        "description": "The content of the comment.",
                        "type": "string"
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    }
                },
                "type": "object"
            },
            "UserFavourites": {
                "required": [
                    "user_id",
                    "title",
                    "description",
                    "newsURL",
                    "imageURL"
                ],
                "properties": {
                    "id": {
                        "description": "The unique identifier of the user favourite.",
                        "type": "UUID",
                        "format": "string",
                        "readOnly": true
                    },
                    "user_id": {
                        "description": "The identifier of the user who added the favourite.",
                        "type": "UUID",
                        "format": "string"
                    },
                    "title": {
                        "description": "The title of the favourite.",
                        "type": "string"
                    },
                    "description": {
                        "description": "The description of the favourite.",
                        "type": "string"
                    },
                    "newsURL": {
                        "description": "The URL of the news article related to the favourite.",
                        "type": "string",
                        "format": "uri"
                    },
                    "imageURL": {
                        "description": "The URL of the image related to the favourite.",
                        "type": "string",
                        "format": "uri"
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    }
                },
                "type": "object"
            },
            "UserLog": {
                "title": "UserLog",
                "description": "A user log model",
                "properties": {
                    "id": {
                        "type": "string",
                        "example": "029ee764-4177-4f54-8ee7-f1a348fdcdb7"
                    },
                    "subject": {
                        "type": "string",
                        "example": "User logged in"
                    },
                    "url": {
                        "type": "string",
                        "format": "url",
                        "example": "https://example.com/login"
                    },
                    "method": {
                        "type": "string",
                        "enum": [
                            "GET",
                            "POST",
                            "PUT",
                            "PATCH",
                            "DELETE"
                        ],
                        "example": "POST"
                    },
                    "ip": {
                        "type": "string",
                        "format": "ipv4",
                        "example": "192.168.0.1"
                    },
                    "agent": {
                        "type": "string",
                        "example": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.110 Safari/537.36"
                    },
                    "user_id": {
                        "type": "string",
                        "example": 1
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-12-31T23:59:59Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-12-31T23:59:59Z"
                    }
                },
                "type": "object"
            }
        }
    }
}